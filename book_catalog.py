# -*- coding: utf-8 -*-
"""Book Catalog

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16pnfaFR3Odtwsojcdbkcx45e-SuOLawj
"""

#This is a project where by the end it should give you your optimal book or list
import textwrap
from tables import index
from os import remove
import random
import time
import pandas as pd
from PIL import Image
import copy

retake_whole = "yes"
retake_quiz = "yes"
retake_random = "yes"

possible_answers_a = ["quiz", "i'd like to take the quiz", "i would like to take the quiz", "id like to take the quiz", "take quiz", "i want to take the quiz", "i wanna take the quiz"]
possible_answers_b = ["randomize", "random", "go straight to randomizer, randomizer", "go straight to randomization", "go straight to randomizing", "go to randomizer", "go to randomization", "randomization"]
possible_answers = str(possible_answers_a + possible_answers_b)

#list of photos corasponding to books:
cover_photos = {1: "/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/1.png", 10 : "/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/10.jpg", 100 : "/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/100.jpg", 101:"/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/101.jpg", 102:"/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/102.jpg", 103:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/103.jpg', 104:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/104.jpg', 105:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/105.jpg', 106:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/106.jpg', 107:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/107.jpg', 108:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/108.jpg', 109:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/109.jpg', 110:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/110.jpg', 111:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/111.jpg', 112:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/112.avif', 113:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/113.jpg', 114:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/114.jpg', 115:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/115.jpg', 116:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/116.jpg', 117:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/117.jpg', 118:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/118.jpg', 119:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/119.jpg', 12:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/12.jpg', 120:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/120.jpg', 121:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/121.jpg', 122:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/122.jpg', 123:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/123.jpg', 124:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/124.png', 125 : '/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/125.jpg', 126:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/126.jpg', 127:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/127.jpg', 128:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/128.jpg', 129:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/129.jpg', 13:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/13.jpg', 130:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/130.jpg', 131:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/131.jpg', 132:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/132.jpg', 133:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/133.jpg', 134:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/134.jpg', 135:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/135.jpg', 136:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/136.jpg', 137:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/137.jpg', 138:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/138.jpg', 139:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/139.jpg', 14:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/14.jpg', 140:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/140.jpg', 141:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/141.jpg', 142:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/142.jpg', 143:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/143.jpg', 144:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/144.jpg', 145:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/145.jpg', 146:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/146.jpg', 147:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/147.jpg', 148:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/148.jpg', 149:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/149.jpg', 15:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/15.jpg', 150:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/150.jpg', 16:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/16.jpg', 17:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/17.jpg', 18:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/18.jpg', 19:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/19.jpg', 2:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/2.jpg', 20:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/20.jpg', 21:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/21.jpg', 22:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/22.jpg', 23:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/23.jpg', 24:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/24.jpg', 25:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/25.jpg', 26:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/26.jpg', 27:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/27.jpg', 28:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/28.jpg', 29:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/29.jpg', 3:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/3.jpg', 30:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/30.jpg', 31:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/31.jpg', 32:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/32.jpg', 33:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/33.jpg', 34:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/34.jpg', 35:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/35.png', 36:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/36.jpg', 37:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/37.jpg', 38:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/38.jpg', 39:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/39.jpg', 4:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/4.jpg', 40:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/40.jpg', 41:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/41.jpg', 42:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/42.jpg', 43:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/43.jpg', 44:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/44.jpg', 45:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/45.jpg', 46:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/46.png', 47:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/47.jpg', 48:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/48.jpg', 49:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/49.jpg', 5:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/5.jpg', 50:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/50.jpg', 51:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/51.jpg', 52:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/52.jpg', 53:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/53.jpg', 54:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/54.jpg', 55:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/55.jpg', 56:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/56.jpg', 57:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/57.jpg', 58:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/58.jpg', 59:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/59.jpg', 6:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/6.jpg', 60:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/60.jpg', 61:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/61.jpg', 62:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/62.jpg', 63:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/63.jpg', 64:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/64.jpg', 65:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/65.jpg', 66:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/66.jpg', 67:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/67.jpg', 68:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/68.jpg', 69:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/69.jpg', 7:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/7.jpg', 70:'Book_Catalogou_File/Book Photos/70.jpg' , 71:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/71.jpg', 72:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/72.jpg', 73:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/73.jpg', 74:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/74.jpg', 75:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/75.jpg', 76:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/76.png', 77:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/77.jpg', 78:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/78.jpg', 79:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/79.jpg', 8:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/8.jpg', 80:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/80.jpg', 81:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/81.jpg', 82:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/82.jpg', 83:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/83.jpg', 84:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/84.jpg', 85:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/85.jpg', 86:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/86.jpg', 87:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/87.jpg', 88:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/88.jpg', 89:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/89.jpg', 9:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/9.jpg', 90:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/90.jpg', 91:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/91.jpg', 92:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/92.jpg', 93:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/93.jpg', 94:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/94.jpg', 95:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/95.jpg', 96:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/96.jpg', 97:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/97.jpg', 98:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/98.jpg', 99:'/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Photos/99.jpg'}

while retake_whole == "yes" or retake_quiz == "yes": #Loop to hold everything and also resets everything
  retake_random = "yes"
  retake_quiz = "yes"
  #Importing the csv file
  from google.colab import drive 

  drive.mount("/content/drive")

  data = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Book_Catalogou_File/Book Catalog Refrence - Sheet1.csv")

  #Making file a dict because it was formatted weirdly
  catalog_dict = {}
  for key in data.keys():
    catagory = data[key]
    catagory_lst = list(catagory)
    catalog_dict[key] = catagory_lst
  lst_copy = copy.deepcopy(catalog_dict)

  #Here starts functions that automates everything:
  #autemated removal of book in list
  def remove_book(index):
    for key in catalog_dict.keys():
      catalog_dict[key].pop(index)
	
  #Randomize function:
  def randomize():
    if len(catalog_dict["Title"]) == 0:
      print("I'm sorry there are currently no books that reach your requirements! Please retake the quiz with different answers!")
    else:
      num = random.randint(0, len(catalog_dict["Title"]) - 1)
      synopsis = textwrap.wrap(catalog_dict["Synopsis"][num], 100)
      #Preparing to print image ->
      book = catalog_dict["Title"][num]
      photo_index = lst_copy["Title"].index(book)
      basewidth = 300
      img = Image.open(cover_photos[photo_index + 1])
      wpercent = (basewidth/float(img.size[0]))
      hsize = int((float(img.size[1])*float(wpercent)))
      img = img.resize((basewidth,hsize), Image.ANTIALIAS)
      img.save(cover_photos[photo_index + 1])
      #Actually printing Items ->
      print(" ")
      print(catalog_dict["Title"][num])
      print("By:", catalog_dict["Author"][num])
      print(" ")
      img.show()
      print(" ")
      print("Rating: ", catalog_dict["Rating"][num])
      print("Synopsis:")
      for line in synopsis:
        print(line)

  len_books = list(range(len(catalog_dict["Title"])))	#equivalent to range(len(catalog_dict["Author Gender"])) when using loops
  #Printing final list:
  def print_list():
    if len(catalog_dict["Title"]) == 0:
      print("I'm sorry there are currently no books that reach your requirements! Please retake the quiz with different answers!")
    else:
      for it in len_books:
        for i in range(len(catalog_dict["Title"])):
          print("-", catalog_dict['Title'][i])
          print("  By:", catalog_dict["Author"][i])
          print(" ")
        break

  #Supposed to remove authors you don't like
  def disliked_auth(inut):
    for i in len_books:
      for auth in catalog_dict["Author"]:
        auth_lower = auth.lower()
        if auth_lower == inut.lower():
          remove_book(catalog_dict["Author"].index(auth))

  #Third question function exludes all books that are either a series or not a series (users choice)		
  def series(inut):
    inut_lower = inut.lower()
    if inut_lower == "yes": #If the user inputs yes
      for i in len_books:
        for item in catalog_dict["Statues"]:
          item_lower = item.lower()
          if item_lower == "stand alone":
            remove_book(catalog_dict["Statues"].index(item))
    elif inut_lower == "no": #If the user inputs no
      for i in len_books:
        for item in catalog_dict["Statues"]:
          item_lower = item.lower()
          if item_lower == "series":
            remove_book(catalog_dict["Statues"].index(item))

  #second and fourth question exludes all books not within the given range
  def num_remove(min_inut, max_inut, catagory):
    for i in len_books:
      for item in catalog_dict[catagory]:
        if min_inut >= int(item) or int(item) >= max_inut:
          remove_book(catalog_dict[catagory].index(item))
		
  #First, Fifth, and Sixth question exludes everything exempt what the user inputted
  def check_remove(inut, catagory):
    for i in len_books:
      for item in catalog_dict[catagory]:
        lower_item = item.lower()
        if inut.lower() != lower_item and lower_item != "no sub-genre":
          remove_book(catalog_dict[catagory].index(item))
  print(" ")

  #Starts the bulk of the quiz with intro
  if retake_whole == "yes":
    print("Welcome to my library! Here you can get a selection of books based on either your personal preference or randomization.")
    time.sleep(5)
    print("To start off, we'd like to know your name!")
    name = input("What's your name?: ")
    print("Introductions aside we'd like to ask a few questions before we begin,")
    time.sleep(7)
    print(" ")

    #Asks whether or not theres an author they do not like
    dislike_input = input("""Are there any authors you don't like or don't want to see in the quiz?
Feel free to type in that author here, if you can't think of anyone just type \"skip\" and move on!
(Remember to check spelling): """).lower()
    if dislike_input == "skip":
      pass
    else:
      disliked_auth(dislike_input)

    print(" ")
    directiory = input("Would you like to take a quiz? or go straight to randomization?: ") #Direction to one of two; Quiz or Random ->
    directiory_lower = directiory.lower()
    for inut in possible_answers_a:
      if directiory_lower == inut:
        retake_quiz = "yes"
        
  elif retake_quiz == "yes":
    directiory_lower = "quiz"
  
  retake_whole = "no"

  #Checks if input is an answer
  while possible_answers.find(directiory_lower) == -1:
    print('Sorry that\'s not an answer, try rephrasing it!')
    directiory = input("Would you like to take a quiz? or go straight to randomization?: ")
    directiory_lower = directiory.lower()
  if retake_quiz == "yes":
    retake_quiz = "no" 

    #From here the quiz starts!
    print(" ")
    for inut in possible_answers_a:
      #Directs which end result you would like
      if directiory_lower == inut:
        print("""So the quiz it is! 
Okay here's the thing, you could either
A) Get one book
or
B) Get a list of books""")
        print("Pick A or B")
        form_final = input()
        while form_final.lower() != "a" and form_final.lower() != "b": #Checks if input is an answer
          print("Hey! That's not an answer, please pick A or B.")
          form_final = input()

        print(" ")
        print('Nice! One more thing though, if you don\'t care for a question just type "skip" and move on!')
        time.sleep(3)
        print("Its time to start your quiz, here we go...")
        time.sleep(5)

        #Question One
        print(" ")
        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict['Title']) != 0 and form_final.lower() == "a"): #Checks if there are still enough books
          gender_input = input("Would you like the author to be male or female?: ")
          #Checks if input is an answer
          #Also applys function
          lower_gen_input = gender_input.lower()
          if lower_gen_input == "skip":
            pass
          else:
            while lower_gen_input != "female" and lower_gen_input != "male" and lower_gen_input != "skip": 
              print("Please check your spelling and pick one of the two choices!")
              gender_input = input("Would you like the author to be male or female?: ")
              lower_gen_input = gender_input.lower()
            else:
              if lower_gen_input == "skip":
                pass
              else:
                check_remove(lower_gen_input, "Author Gender")

        print(" ")
        #question two:
        #Creating options:
        max = 1000
        min = 2023
        for book_date in catalog_dict["Publication Date"]:
          if int(book_date) > max:
            max = book_date
          elif int(book_date) < min:
            min = book_date

        margin_date = max - min
        a = round(min + round(margin_date * 0.61))
        b = round(a + round(margin_date * 0.24))
        c = round(b + round(margin_date * 0.09))
        d = max

        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict['Title']) != 0 and form_final.lower() == "a"): #Checks if there are still enough books
          #Asking question ->
          print("When do you want your book to have been published?")
          print("A) {} - {}".format(min, a))
          print("B) {} - {}".format(a + 1, b))
          print("C) {} - {}".format(b + 1, c))
          print("D) {} - {}".format(c + 1, d))
          date_input = input("Pick A, B, C, or D: ").lower()

          #checks if input is an answer
          #also applys function
          if date_input == "skip":
            pass
          else:
            while date_input != "a" and date_input != "b" and date_input != "c" and date_input != "d" and date_input != "e" and date_input == "skip":
              print("This is not an option! Please pick A, B, C, D, or E!")
              print(" ")
              print("When do you want your book to have been published?")
              print("A) {} - {}".format(min, a))
              print("B) {} - {}".format(a + 1, b))
              print("C) {} - {}".format(b + 1, c))
              print("D) {} - {}".format(c + 1, d))
              date_input = input("Pick A, B, C, or D: ").lower()
            else:
              if date_input == "skip":
                pass
              elif date_input == "a":
                num_remove(min, a, "Publication Date")
              elif date_input == "b":
                num_remove(a + 1, b, "Publication Date")
              elif date_input == "c":
                num_remove(b + 1, c, "Publication Date")
              elif date_input == "d":
                num_remove(c + 1, d, "Publication Date")

        print(" ")
        #question three:
        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict['Title']) != 0 and form_final.lower() == "a"): #Checks if there are still enough books
          series_input = input("Would you like the book to be a series?: ")
          #checks if input is an answer
          #also applys function
          lower_series_input = series_input.lower()
          if lower_series_input == "skip":
            pass
          else:
            while lower_series_input != "yes" and lower_series_input != "no" and lower_series_input != "skip":
              print("Please only answer yes or no and check your spelling!")
              series_input = input("Would you like the book to be a series?: ")
              lower_series_input = series_input.lower()
            else:
              if lower_series_input == "skip":
                pass
              else:
                series(lower_series_input)

        print(" ")
        #question four:
        #Creating options:
        max = 1000
        min = 2023
        for num_pages in catalog_dict["Page Count"]:
          if int(num_pages) > max:
            max = int(num_pages)
          elif int(num_pages) < min:
            min = int(num_pages)

        margin_page = int(max - min)
        plus_page = int(margin_page / 4)
        a = round(min + plus_page)
        b = round(a + plus_page)
        c = round(b + plus_page)
        d = round(c + plus_page)
        e = max

        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict['Title']) != 0 and form_final.lower() == "a"): #Checks if there are still enough books
          #Asking question ->
          print("How many pages would you like your book to be?")
          print("A) {} - {}".format(min, a))
          print("B) {} - {}".format(a + 1, b))
          print("C) {} - {}".format(b + 1, c))
          print("D) {} - {}".format(c + 1, d)) 
          page_input = input("Pick A, B, C, or D: ").lower()

          #Checks if input is an answer
          #Also applys function
          while page_input != "a" and page_input != "b" and page_input != "c" and page_input != "d" and page_input != "e" and page_input != "skip":
            print("This is not an option! Please pick A, B, C, or D!")
            print(" ")
            print("How many pages would you like your book to be?")
            print("A) {} - {}".format(min, a))
            print("B) {} - {}".format(a + 1, b))
            print("C) {} - {}".format(b + 1, c))
            print("D) {} - {}".format(c + 1, d))
            page_input = input("Pick A, B, C, or D: ").lower()
          else:
            if page_input == "skip":
              pass
            elif page_input == "a":
              num_remove(min, a, "Page Count")
            elif page_input == "b":
              num_remove(a + 1, b, "Page Count")
            elif page_input == "c":
              num_remove(b + 1, c, "Page Count")
            elif page_input == "d":
              num_remove(c + 1, d, "Page Count")

        print(" ")
        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict['Title']) != 0 and form_final.lower() == "a"): #Checks if there are still enough books
          #question five
          print("What genre would you like? Here's a list of all possible genres.")
          #Making list of all possible genres ->
          all_genres = []
          genre_lst2 = []
          for genre in catalog_dict["Genre"]:
            if str(all_genres).find(genre) == -1:
              all_genres.append(genre)
  
          place_holder = 0
          genre_left = len(all_genres)
          while genre_left >= 1:
            if place_holder + 4 < len(all_genres):
              print("•", all_genres[place_holder], "•", all_genres[place_holder + 1], "•", all_genres[place_holder + 2], "•", all_genres[place_holder + 3], "•", all_genres[place_holder + 4])
              place_holder += 5
            elif genre_left == 4:
              print("•", all_genres[place_holder], "•", all_genres[place_holder + 1], "•", all_genres[place_holder + 2], "•", all_genres[place_holder + 3])
              place_holder += 4
            elif genre_left == 3:
              print("•", all_genres[place_holder], "•", all_genres[place_holder + 1], "•", all_genres[place_holder + 2])
              place_holder += 3
            elif genre_left == 2:
              print("•", all_genres[place_holder], "•", all_genres[place_holder + 1])
              place_holder += 2
            elif genre_left == 1:
              print("•", all_genres[place_holder])
              place_holder += 1
            genre_left += (place_holder + 1) * -1
            #Segment ends here 

          genr_input = input()
          lower_genr = genr_input.lower()

          #Checks if input is an answer
          if lower_genr == "skip":
            pass 
          else:
            genre_lst = str(catalog_dict["Genre"]).lower()
            while genre_lst.find(lower_genr) == -1:
              print("It seems that we don't have that genre, make sure to check your spelling and pick another one!")
              genr_input = input("What genre would you like? (ex; Fantasy, Adventure, Romance): ")
              lower_genr = genr_input.lower()
            else:
              check_remove(lower_genr, "Genre")

        print(" ")
        if (len(catalog_dict['Title']) > 5 and form_final.lower() == "b") or (len(catalog_dict["Title"]) != 0 and form_final.lower() == "a"): #Checks if there are enough books left
          #question sixth
          print("What sub-genre would you like? Here's a list of all possible sub-genres.")
          #Making list of subgenres ->
          all_subgenres = []
          for subgenre in catalog_dict["Sub-Genre"]:
            if str(all_subgenres).find(str(subgenre)) == -1:
              all_subgenres.append(subgenre)
          
          place_holder2 = 0
          subgenre_left = len(all_subgenres)
          while subgenre_left >= 1:
            if place_holder2 + 4 < len(all_subgenres):
              print("•", all_subgenres[place_holder2], "•", all_subgenres[place_holder2 + 1], "•", all_subgenres[place_holder2 + 2], "•", all_subgenres[place_holder2 + 3], "•", all_subgenres[place_holder2 + 4])
              place_holder2 += 5
            elif subgenre_left == 4:
              print("•", all_subgenres[place_holder2], "•", all_subgenres[place_holder2 + 1], "•", all_subgenres[place_holder2 + 2], "•", all_subgenres[place_holder2 + 3])
              place_holder2 += 4
            elif subgenre_left == 3:
              print("•", all_subgenres[place_holder2], "•", all_subgenres[place_holder2 + 1], "•", all_subgenres[place_holder2 + 2])
              place_holder2 += 3
            elif subgenre_left == 2:
              print("•", all_subgenres[place_holder2], "•", all_subgenres[place_holder2 + 1])
              place_holder2 += 2
            elif subgenre_left == 1:
              print("•", all_subgenres[place_holder2])
              place_holder2 += 1
            subgenre_left += (place_holder2 + 1) * -1
          #Making list of subgenres ends here->

          subgenre_input = input()
          lower_genre = subgenre_input.lower()

          #Checks if input is an aswer
          if lower_genre == "skip":
            pass
          else:
            subgenre_lst = str(catalog_dict["Sub-Genre"]).lower()
            while subgenre_lst.find(lower_genre) == -1:
              print("It seems that we don't have that sub-genre, make sure to check your spelling and pick another one!")
              subgenr_input = input("What sub-genre would you like?: ")
              lower_genre = subgenr_input.lower()
            else:
              check_remove(lower_genre, "Sub-Genre")

      #From here these are several different endings depending on what final result the user picked. 
      #Outro1
        print(" ")
        print("""Congratulations you've finished the quiz! Do you know what that means?
It's time for final results!""")
        print("Here we go...")

      #counter
        num = 0
        while num != 10:
          num += 1
          print(num)
          time.sleep(1)

      #Outro1.2 aka single book
        if form_final.lower() == "a":
          print("Here is your final book!")
          randomize()
          time.sleep(3)
          retake_quiz = input("Would you like to retake the quiz?: ").lower()
          if retake_quiz == "no":
            retake_whole = input("Would you like to reset the library session?: ")
            
            if retake_whole == "no":
              print("It seems that it's time for us to part ways!")
              print("See you soon {} :)".format(name))
          else:
            retake_whole = "no"
        #Outro1.3 aka list of books
        elif form_final.lower() == "b":
          print("Here's your list!")
          print_list()
          time.sleep(3)
          retake_quiz = input("Would you like to retake the quiz?: ").lower()
          if retake_quiz == "no":
            retake_whole = input("Would you like to reset the library session?: ").lower()
            
            if retake_whole == "no":
              print("It seems that it's time for us to part ways!")
              print("See you soon {} :)".format(name))
          else:
            retake_whole = "no"

  #If you picked random in that first question then here is where it redirects you
  if retake_random == "yes":
    print(" ")
    retake_random = "no"
    for inut2 in possible_answers_b:
      if directiory_lower == inut2:
        num = 0
        print("Good Choice!")
        time.sleep(3)
        print("Alright here we go...")
        #Counter
        while num != 10:
          num += 1
          print(num)
          time.sleep(1)

        #Outro2
        print("Here's your final suggestion!")
        randomize() 

        time.sleep(5)
        print(" ")
        retake_random = input("Would you like to randomize for another?: ").lower()
        if retake_random == "no":
          retake_whole = input("Would you like to reset the library session?: ").lower()
          if retake_whole == "no": #This ending ends the loop completely hence the goodbye
            print(" ")
            print("It seems that it's time for us to part ways!")
            print("See you soon {} :)".format(name))
          else:
            retake_quiz = "no"